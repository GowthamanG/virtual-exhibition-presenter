// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: multiUser-sync.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from multiUser-sync.proto</summary>
public static partial class MultiUserSyncReflection {

  #region Descriptor
  /// <summary>File descriptor for multiUser-sync.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static MultiUserSyncReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChRtdWx0aVVzZXItc3luYy5wcm90byJJCg5QbGF5ZXJQb3NpdGlvbhIRCgl4",
          "UG9zaXRpb24YASABKAUSEQoJeVBvc2l0aW9uGAIgASgFEhEKCXpQb3NpdGlv",
          "bhgDIAEoBSJJCg5QbGF5ZXJSb3RhdGlvbhIRCgl4UG9zaXRpb24YASABKAUS",
          "EQoJeVBvc2l0aW9uGAIgASgFEhEKCXpQb3NpdGlvbhgDIAEoBSJGCgtQbGF5",
          "ZXJTY2FsZRIRCgl4UG9zaXRpb24YASABKAUSEQoJeVBvc2l0aW9uGAIgASgF",
          "EhEKCXpQb3NpdGlvbhgDIAEoBTKqAQoNbXVsdGlVc2VyU3luYxI0CgpHZXRQ",
          "b3NpdG9uEg8uUGxheWVyUG9zaXRpb24aDy5QbGF5ZXJQb3NpdGlvbiIAKAEw",
          "ARI1CgtHZXRSb3RhdGlvbhIPLlBsYXllclJvdGF0aW9uGg8uUGxheWVyUm90",
          "YXRpb24iACgBMAESLAoIR2V0U2NhbGUSDC5QbGF5ZXJTY2FsZRoMLlBsYXll",
          "clNjYWxlIgAoATABYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerPosition), global::PlayerPosition.Parser, new[]{ "XPosition", "YPosition", "ZPosition" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerRotation), global::PlayerRotation.Parser, new[]{ "XPosition", "YPosition", "ZPosition" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PlayerScale), global::PlayerScale.Parser, new[]{ "XPosition", "YPosition", "ZPosition" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class PlayerPosition : pb::IMessage<PlayerPosition> {
  private static readonly pb::MessageParser<PlayerPosition> _parser = new pb::MessageParser<PlayerPosition>(() => new PlayerPosition());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerPosition> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MultiUserSyncReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerPosition() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerPosition(PlayerPosition other) : this() {
    xPosition_ = other.xPosition_;
    yPosition_ = other.yPosition_;
    zPosition_ = other.zPosition_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerPosition Clone() {
    return new PlayerPosition(this);
  }

  /// <summary>Field number for the "xPosition" field.</summary>
  public const int XPositionFieldNumber = 1;
  private int xPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int XPosition {
    get { return xPosition_; }
    set {
      xPosition_ = value;
    }
  }

  /// <summary>Field number for the "yPosition" field.</summary>
  public const int YPositionFieldNumber = 2;
  private int yPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int YPosition {
    get { return yPosition_; }
    set {
      yPosition_ = value;
    }
  }

  /// <summary>Field number for the "zPosition" field.</summary>
  public const int ZPositionFieldNumber = 3;
  private int zPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ZPosition {
    get { return zPosition_; }
    set {
      zPosition_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerPosition);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerPosition other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (XPosition != other.XPosition) return false;
    if (YPosition != other.YPosition) return false;
    if (ZPosition != other.ZPosition) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (XPosition != 0) hash ^= XPosition.GetHashCode();
    if (YPosition != 0) hash ^= YPosition.GetHashCode();
    if (ZPosition != 0) hash ^= ZPosition.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (XPosition != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(XPosition);
    }
    if (YPosition != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(YPosition);
    }
    if (ZPosition != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ZPosition);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (XPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(XPosition);
    }
    if (YPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(YPosition);
    }
    if (ZPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZPosition);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerPosition other) {
    if (other == null) {
      return;
    }
    if (other.XPosition != 0) {
      XPosition = other.XPosition;
    }
    if (other.YPosition != 0) {
      YPosition = other.YPosition;
    }
    if (other.ZPosition != 0) {
      ZPosition = other.ZPosition;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          XPosition = input.ReadInt32();
          break;
        }
        case 16: {
          YPosition = input.ReadInt32();
          break;
        }
        case 24: {
          ZPosition = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PlayerRotation : pb::IMessage<PlayerRotation> {
  private static readonly pb::MessageParser<PlayerRotation> _parser = new pb::MessageParser<PlayerRotation>(() => new PlayerRotation());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerRotation> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MultiUserSyncReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerRotation() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerRotation(PlayerRotation other) : this() {
    xPosition_ = other.xPosition_;
    yPosition_ = other.yPosition_;
    zPosition_ = other.zPosition_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerRotation Clone() {
    return new PlayerRotation(this);
  }

  /// <summary>Field number for the "xPosition" field.</summary>
  public const int XPositionFieldNumber = 1;
  private int xPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int XPosition {
    get { return xPosition_; }
    set {
      xPosition_ = value;
    }
  }

  /// <summary>Field number for the "yPosition" field.</summary>
  public const int YPositionFieldNumber = 2;
  private int yPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int YPosition {
    get { return yPosition_; }
    set {
      yPosition_ = value;
    }
  }

  /// <summary>Field number for the "zPosition" field.</summary>
  public const int ZPositionFieldNumber = 3;
  private int zPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ZPosition {
    get { return zPosition_; }
    set {
      zPosition_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerRotation);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerRotation other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (XPosition != other.XPosition) return false;
    if (YPosition != other.YPosition) return false;
    if (ZPosition != other.ZPosition) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (XPosition != 0) hash ^= XPosition.GetHashCode();
    if (YPosition != 0) hash ^= YPosition.GetHashCode();
    if (ZPosition != 0) hash ^= ZPosition.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (XPosition != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(XPosition);
    }
    if (YPosition != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(YPosition);
    }
    if (ZPosition != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ZPosition);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (XPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(XPosition);
    }
    if (YPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(YPosition);
    }
    if (ZPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZPosition);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerRotation other) {
    if (other == null) {
      return;
    }
    if (other.XPosition != 0) {
      XPosition = other.XPosition;
    }
    if (other.YPosition != 0) {
      YPosition = other.YPosition;
    }
    if (other.ZPosition != 0) {
      ZPosition = other.ZPosition;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          XPosition = input.ReadInt32();
          break;
        }
        case 16: {
          YPosition = input.ReadInt32();
          break;
        }
        case 24: {
          ZPosition = input.ReadInt32();
          break;
        }
      }
    }
  }

}

public sealed partial class PlayerScale : pb::IMessage<PlayerScale> {
  private static readonly pb::MessageParser<PlayerScale> _parser = new pb::MessageParser<PlayerScale>(() => new PlayerScale());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PlayerScale> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::MultiUserSyncReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerScale() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerScale(PlayerScale other) : this() {
    xPosition_ = other.xPosition_;
    yPosition_ = other.yPosition_;
    zPosition_ = other.zPosition_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PlayerScale Clone() {
    return new PlayerScale(this);
  }

  /// <summary>Field number for the "xPosition" field.</summary>
  public const int XPositionFieldNumber = 1;
  private int xPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int XPosition {
    get { return xPosition_; }
    set {
      xPosition_ = value;
    }
  }

  /// <summary>Field number for the "yPosition" field.</summary>
  public const int YPositionFieldNumber = 2;
  private int yPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int YPosition {
    get { return yPosition_; }
    set {
      yPosition_ = value;
    }
  }

  /// <summary>Field number for the "zPosition" field.</summary>
  public const int ZPositionFieldNumber = 3;
  private int zPosition_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ZPosition {
    get { return zPosition_; }
    set {
      zPosition_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PlayerScale);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PlayerScale other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (XPosition != other.XPosition) return false;
    if (YPosition != other.YPosition) return false;
    if (ZPosition != other.ZPosition) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (XPosition != 0) hash ^= XPosition.GetHashCode();
    if (YPosition != 0) hash ^= YPosition.GetHashCode();
    if (ZPosition != 0) hash ^= ZPosition.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (XPosition != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(XPosition);
    }
    if (YPosition != 0) {
      output.WriteRawTag(16);
      output.WriteInt32(YPosition);
    }
    if (ZPosition != 0) {
      output.WriteRawTag(24);
      output.WriteInt32(ZPosition);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (XPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(XPosition);
    }
    if (YPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(YPosition);
    }
    if (ZPosition != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ZPosition);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PlayerScale other) {
    if (other == null) {
      return;
    }
    if (other.XPosition != 0) {
      XPosition = other.XPosition;
    }
    if (other.YPosition != 0) {
      YPosition = other.YPosition;
    }
    if (other.ZPosition != 0) {
      ZPosition = other.ZPosition;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          XPosition = input.ReadInt32();
          break;
        }
        case 16: {
          YPosition = input.ReadInt32();
          break;
        }
        case 24: {
          ZPosition = input.ReadInt32();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
